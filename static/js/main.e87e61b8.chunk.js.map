{"version":3,"sources":["components/Form.js","components/InfoCharacter.js","App.js","components/Router.js","serviceWorker.js","index.js"],"names":["Form","_ref","data","_useState","useState","_useState2","Object","slicedToArray","filter","setFilter","filterCharacter","character","name","toLowerCase","indexOf","react_default","a","createElement","onChange","e","currentTarget","value","className","type","placeholder","map","ele","key","style","marginBottom","react_router_dom","to","InforCharacter","url","mass","birth_year","gender","App","setData","useEffect","asyncToGenerator","regenerator_default","mark","_callee","result","wrap","_context","prev","next","axios","sent","console","log","results","t0","stop","apply","this","arguments","fetchData","components_Form","InfoCharacter","Router","basename","process","react_router","path","component","exact","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","components_Router","document","getElementById","URL","href","origin","addEventListener","concat","fetch","response","contentType","headers","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.e87e61b8.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nconst Form = ({data}) => {\r\n    const [filter, setFilter] = useState([]);\r\n\r\n   const filterCharacter = data.filter( (character) => {\r\n    return character.name.toLowerCase().indexOf(filter) !== -1;\r\n   });\r\n\r\n    return(\r\n    <div>\r\n        <input onChange={ e => setFilter(e.currentTarget.value)} className=\"center justify-content-center input mt-5\" type=\"text\" placeholder=\"BUSCAR\"/>\r\n     <div className=\"container\">\r\n     <div className=\"my-5\">\r\n                 <h2 className=\"color-white center\">RESULTADOS</h2>\r\n            </div>\r\n            <div className=\"row\">\r\n            \r\n   {filterCharacter.map( ele => (\r\n\r\n    <div key={ele.name} className=\"col-4 cards my-2\" style={{ marginBottom: \"2rem\"}} >\r\n               <div className=\"recipes__box\">\r\n                    \r\n             <div className=\"\">\r\n                <h5 className=\"color-white hero-title my-2 text-center mt-4\">\r\n                { ele.name }\r\n                </h5>\r\n                <button className=\"color-white btn-volver link text-center \">\r\n                    <Link className=\"color-white btn-volver link text-center btn-detalle\" to=\"/descripción\">Ver detaller</Link>    \r\n                </button>\r\n             </div>    \r\n            </div>\r\n         </div>\r\n         ))}\r\n        </div>\r\n        </div>\r\n    </div>\r\n  );\r\n};\r\n  export default Form; ","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst InforCharacter = ({data}) => {\r\n   \r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n            {data.map( (data) => {\r\n            return( \r\n                <div key={data.url} className=\"col-md-4 color-white my-5\">\r\n                        <h3 className=\"hero-title App-subtitle\">{data.name }</h3>\r\n\r\n                 <div className=\"body-character\">\r\n                        <p className=\"text-character mt-2\">\r\n                        Peso: {''} \r\n                         {data.mass}kg\r\n                        </p>\r\n                        <p className=\"active-recipe__website\">\r\n                        Año: \r\n                          {data.birth_year}\r\n                        </p>\r\n                        <p className=\"active-recipe__website\">\r\n                        Género: \r\n                         {data.gender}\r\n                        </p>\r\n                        \r\n                </div>\r\n                </div>\r\n                );\r\n        })}  \r\n        <button className=\"my-5 btn-volver link ml-5\" >\r\n                        <Link className=\"color-white btn-volver link\" to=\"/\">Volver</Link>\r\n                        </button>\r\n         </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\nexport default InforCharacter;","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport Form from './components/Form';\nimport InforCharacter from './components/InfoCharacter';\n\nconst App = () => {\n\n  const [data, setData] = useState([]);\n \n  useEffect(() => {\n    const fetchData = async () => {\n      \n      try {\n        const result = await axios(\n          'https://swapi.co/api/people/',\n        );\n        console.log(result.data.results);\n        setData(result.data.results);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchData();\n  }, []);\n  \n    return (\n      <div className=\"App color-black justify-content-center\">\n        <header className=\"App-header\">\n          <h1 className=\"App-title color-white center\">STAR WARS</h1>\n          <h1 className=\"App-subtitle color-white center\">PERSONAJES</h1>\n        </header>\n        <Form data={data} /> \n        <InforCharacter data={data} />  \n      </div>\n    );\n  \n}\n\n\nexport default App;\n","import React from 'react';\r\nimport {HashRouter, Route} from \"react-router-dom\";\r\nimport App from \"../App\";\r\nimport InfoCharacter from \"./InfoCharacter\";\r\n\r\nconst Router = () => (\r\n  <HashRouter basename={process.env.PUBLIC_URL}>\r\n        <Route path=\"/\" component={App} exact />\r\n        {/* <Route path=\"/descripción\" component={InfoCharacter} /> */}\r\n    </HashRouter>\r\n);\r\n\r\n    \r\nexport default Router;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import App from './App';\nimport Router from \"./components/Router\";\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Router />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}